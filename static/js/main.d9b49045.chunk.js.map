{"version":3,"sources":["components/NextBtn.js","components/CustomOption.js","screens/LanguageScreen.js","screens/GenreScreen.js","components/MovieCard.js","screens/VoteScreen.js","components/LeaderBar.js","screens/LeaderboardScreen.js","screens/NotFound.js","components/App.js","index.js"],"names":["NextBtn","bottom","right","activeColor","id","style","backgroundColor","CustomOption","val","getVal","className","onClick","e","target","LanguageScreen","languageIDs","Arabic","chinese","english","french","german","hindi","japanese","korean","malayalam","persian","russian","tamil","telugu","turkish","urdu","useState","selectedlangg","setselectedlangg","getLangg","langg","element","classList","add","updatedList","Set","console","log","data","length","languageKeys","Object","keys","map","i","to","state","language","GenreScreen","useLocation","genreIDs","action","adventure","animation","comedy","crime","drama","family","fantasy","horror","mystery","romance","scifi","thriller","selectedgenre","setselectedgenre","getGenre","genre","genreKeys","key","MovieCard","movieData","voteMovie","poster_path","title","vote_average","runtime","release_date","adult","popularity","moviePosterLink","NA","color","src","alt","VoteScreen","movieList","initialMovies","nextMovieData","votedMovieData","voteList","movieIndex","page","upVoted","downVoted","anyErrors","fetchedMovieData","setFetchedMovieData","useEffect","getMovieData","then","response","movieInfoFull","results","catch","error","message","baseURL","axios","get","AorB","votedMovieObj","votelistRow","A","B","result","push","movieDataA","movieDataB","voteListObj","LeaderBar","children","LeaderboardScreen","votes","vote","j","NotFound","display","alignItems","justifyContent","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9b49045.chunk.js","sourcesContent":["import './NextBtn.css';\r\n\r\nconst NextBtn = ({bottom, right, activeColor}) => {\r\n    return <span id=\"nextBtn\" style={{bottom: bottom, right: right, backgroundColor: activeColor}}></span>\r\n}\r\n\r\nexport default NextBtn;","import './CustomOption.css';\r\n\r\nconst CustomOption = ({val, getVal}) => {\r\n    return (\r\n        <div className=\"custom-option\" onClick={ (e) =>  getVal(val, e.target)}>\r\n            { val }\r\n        </div>\r\n    );\r\n}\r\n\r\n// onClick={ }\r\n\r\nexport default CustomOption;","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NextBtn from './../components/NextBtn'\r\nimport CustomOption from './../components/CustomOption';\r\nimport './LanguageScreen.css';\r\n\r\nconst LanguageScreen = () => {\r\n\r\n  \r\n  const languageIDs = {\r\n    Arabic: 'ar', chinese: 'zh', english: 'en', french: 'fr', german: 'de', hindi: 'hi', japanese: 'ja', korean: 'ko', malayalam: 'ml', persian: 'fa', russian: 'ru', tamil: 'ta', telugu: 'te', turkish: 'tr', urdu: 'ur'\r\n  };\r\n\r\n  const [selectedlangg, setselectedlangg] = useState([]);\r\n\r\n  const getLangg = (langg, element) => {\r\n    element.classList.add('selected');\r\n    // save by ISO 639-1 standard codes\r\n    let updatedList = [...selectedlangg, languageIDs[langg]];\r\n    // remove repeating selection by set convertion hack\r\n    updatedList = [...new Set(updatedList)];\r\n    console.log(updatedList);\r\n    setselectedlangg( updatedList );\r\n  }\r\n\r\n  let data = selectedlangg[selectedlangg.length-1];\r\n  const languageKeys = Object.keys(languageIDs);\r\n\r\n  return (\r\n    <div className=\"language-screen\">\r\n      <h1 className=\"page-title\">choose languages</h1>\r\n      <div className=\"langg-pref-wrapper\">\r\n        {\r\n          languageKeys.map((langg, i) => <CustomOption key={i} val={langg} getVal={ getLangg } />)\r\n        }\r\n      </div>\r\n      <Link to=\"/genre\"  state={{ language: data }}>\r\n        <NextBtn bottom=\"5vh\" right=\"5vh\" activeColor={ selectedlangg.length > 0 ? '#7dddf4' : 'rgb(176, 190, 206)' } />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LanguageScreen;","import { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport CustomOption from '../components/CustomOption';\r\nimport NextBtn from './../components/NextBtn'\r\nimport './GenreScreen.css';\r\n\r\nconst GenreScreen = () => {\r\n\r\n    // get langg data from previous page\r\n\r\n    const location = useLocation();\r\n    const { language } = location.state;\r\n\r\n    const genreIDs = {\r\n        action: 28, adventure: 12, animation: 16, comedy: 35, crime: 80, drama: 18, family: 10751, fantasy: 14, horror: 27, mystery: 9648, romance: 10749, scifi: 878, thriller: 53\r\n    };\r\n\r\n    const [selectedgenre, setselectedgenre] = useState([]);\r\n\r\n    const getGenre = (genre, element) => {\r\n        element.classList.add('selected');\r\n        // save genre ID only\r\n        let updatedList = [...selectedgenre, genreIDs[genre]];\r\n        // remove repeating selection by - set convertion hack\r\n        updatedList = [...new Set(updatedList)];\r\n        console.log(updatedList);\r\n        setselectedgenre( updatedList );\r\n    }\r\n\r\n\r\n    let finalGenre = selectedgenre[selectedgenre.length-1];\r\n    let data = { language, genre: finalGenre };\r\n\r\n    const genreKeys = Object.keys(genreIDs);\r\n\r\n    return (\r\n        <div className=\"genre-screen\">\r\n            <h1 className=\"page-title\">choose genre</h1>\r\n            <div className=\"genre-pref-wrapper\">\r\n                {\r\n                    genreKeys.map((key, i) => <CustomOption key={i} val={key} getVal={ getGenre } />)\r\n                }\r\n            </div>\r\n            <Link to=\"/vote\" state={{ data }}>\r\n                <NextBtn bottom=\"5vh\" right=\"5vh\" activeColor={ selectedgenre.length > 0 ? '#7dddf4' : 'rgb(176, 190, 206)' } />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreScreen;","import './MovieCard.css';\r\n\r\nconst MovieCard = ({ movieData, voteMovie }) => {\r\n    \r\n    // console.log('> plotting movie info');\r\n    // console.table(movieData);\r\n\r\n    if(typeof movieData !== 'object') return <h2>no data..</h2>;\r\n\r\n    const { poster_path, title, vote_average, runtime, release_date, adult, popularity } = movieData;\r\n    \r\n    const moviePosterLink = `https://image.tmdb.org/t/p/w300/${poster_path}` || '';\r\n    // let NA = 'N/A';\r\n    let NA = <span style={{ color:'red' }}>N/A</span>;\r\n\r\n    return (\r\n        <div className=\"movie-container\">\r\n            <img className=\"moviePoster\" src={moviePosterLink ? moviePosterLink : NA} alt=\"poster\" />\r\n            <h2 className=\"movieName\">{ title }</h2>\r\n            { vote_average ? <span className=\"movieInfo\">{ `rating: ${ vote_average }` }</span> : NA }\r\n            { runtime ? <span className=\"movieInfo\">{ ` dur: ${ runtime }` }</span> : NA }\r\n            { release_date ? <span className=\"movieInfo\">{ `release date: ${ release_date }` }</span> : NA }\r\n            <span className=\"movieInfo\">{ `adult: ${ adult }` }</span>\r\n            { popularity ? <span className=\"movieInfo\">{ `popularity: ${ popularity }` }</span> : NA }\r\n            <button id=\"voteBtn\" className=\"customBtn\" onClick={ voteMovie }>vote</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;","import { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './VoteScreen.css';\r\n\r\nconst VoteScreen = () => {\r\n\r\n    // previous page data of langg and genre\r\n    const location = useLocation();\r\n    const { data } = location.state;\r\n\r\n    // MOVIE VARIABLES :)\r\n    const [fetchedMovieData, setFetchedMovieData] = useState({\r\n        movieList: {},\r\n        initialMovies: [],\r\n        nextMovieData: {},\r\n        votedMovieData: {},\r\n        voteList: [],\r\n        movieIndex: 1, // not zero bcz of initialmovies\r\n        page: 1,\r\n        upVoted: '',\r\n        downVoted: '',\r\n        anyErrors: '',\r\n    });\r\n\r\n    // effect as componentDidMount\r\n\r\n    useEffect(() => {\r\n        // destructure result and setstate list of movies\r\n        getMovieData().then(response => {                \r\n            // contains 20 movies\r\n            const movieInfoFull = response.data.results;\r\n            console.log('fetched_movies: ',movieInfoFull.length); // check if 20 movies available - soon update\r\n\r\n            setFetchedMovieData({ // set 20 movieslist, reset other values\r\n                ...fetchedMovieData,\r\n                movieList: movieInfoFull,\r\n                initialMovies: [movieInfoFull[0], movieInfoFull[1]],\r\n                nextMovieData: {},\r\n                movieIndex: 1,\r\n            });\r\n\r\n        }).catch(error => {\r\n            // error handling here\r\n            console.log(error.message);\r\n            // insert error msg to state\r\n            setFetchedMovieData({\r\n                ...fetchedMovieData,\r\n                anyErrors: error.message,\r\n            });\r\n        });\r\n            // re-run on page update, bring's next page\r\n    }, [fetchedMovieData.page]);\r\n\r\n\r\n    // effect as componentDidUpdate\r\n\r\n    useEffect(() => {\r\n        // console.log('>  component updated !');\r\n        const { movieList, movieIndex } = fetchedMovieData;\r\n\r\n        // does state has movies fetched ?\r\n        if(movieList) {\r\n            // console.log('  >  movieList available');\r\n            console.log('showing movie ',movieIndex);\r\n\r\n            // update next movie to draw data from\r\n            setFetchedMovieData({\r\n                ...fetchedMovieData,\r\n                nextMovieData: movieList[movieIndex],\r\n            });\r\n        }\r\n        // run on every update of movie list or index\r\n    }, [fetchedMovieData.movieList, fetchedMovieData.movieIndex]);\r\n\r\n\r\n    // THE fn to bring data from the movie database -tmdb\r\n\r\n    const getMovieData = () => {\r\n        // console.log('data: ',data);\r\n        // API SETUP\r\n        const api_key = '08d7db24695193b7c6dbdac9d5ac3933'; // MY_KEY to be hided - sooner\r\n        const language = data.language || 'en-US'; // defaults to english \r\n        const genre = data.genre || '27'; // dafault to horror\r\n        const page = fetchedMovieData.page; // from state - bcz its dynamic\r\n        // THE formatted URL..\r\n        const baseURL = `https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&language=${language}&sort_by=popularity.desc?&include_video=false&page=${page}&with_genre=${genre}`;\r\n\r\n        // outputs 1 page of 20 movies object array\r\n        return axios.get(baseURL);\r\n    }\r\n\r\n    const finishVoting = (voteListObj) => {\r\n        console.log('finished');\r\n        console.log(voteListObj);\r\n        // to be set up next !\r\n    }\r\n\r\n    const voteMovie = (AorB, votedMovieObj) => {\r\n        // console.log(`voted: ${AorB} - ${votedMovieObj.title} - obj: ${votedMovieObj}`);\r\n        let { nextMovieData, movieIndex, votedMovieData, upVoted, downVoted, voteList, page, initialMovies } = fetchedMovieData;\r\n        let votelistRow;\r\n\r\n        if (initialMovies)\r\n            // get first two movies name\r\n            votelistRow = { A: initialMovies[0].title, B: initialMovies[1].title};\r\n\r\n        if (movieIndex > 0) {\r\n            initialMovies = null; // space for improvement in next update\r\n            upVoted = AorB;\r\n            downVoted = AorB === 'A' ? 'B' : 'A'; // invert it\r\n            votedMovieData = votedMovieObj;\r\n            if (!votelistRow) {\r\n                votelistRow = { A: voteList[voteList.length - 1].result, B: nextMovieData.title, result: votedMovieObj.title };\r\n            } else votelistRow = {...votelistRow, result: votedMovieObj.title};\r\n            voteList.push(votelistRow);\r\n            console.log(`upVoted: ${upVoted}, downVoted: ${downVoted}, full vote list --`);\r\n            // console.table(voteList);\r\n        }\r\n\r\n        // update next movies state value\r\n        setFetchedMovieData({\r\n            ...fetchedMovieData,\r\n            movieIndex: movieIndex + 1,\r\n            initialMovies,\r\n            upVoted,\r\n            downVoted,\r\n            votedMovieData,\r\n            voteList,\r\n            page: movieIndex >= 19 ? page + 1 : page,\r\n        });\r\n    }\r\n\r\n    const { anyErrors, movieIndex, nextMovieData, downVoted, votedMovieData, initialMovies } = fetchedMovieData;\r\n\r\n    // A HACK to fix logic\r\n\r\n    const movieDataA = (movieIndex > 1) ? (downVoted === 'A' ? nextMovieData : votedMovieData) : initialMovies[0];\r\n    const movieDataB = (movieIndex > 1) ? (downVoted === 'B' ? nextMovieData : votedMovieData) : initialMovies[1];\r\n\r\n    return (\r\n        <div className=\"vote-screen\">\r\n            <h1 className=\"page-title\">vote screen</h1>\r\n                {\r\n                    anyErrors ? ( // if errors -\r\n                        <div className=\"movie-wrapper\">\r\n                            <h2 className=\"color-white\">{ anyErrors }..</h2>\r\n                        </div>\r\n                        ) : \r\n                    nextMovieData ? ( // else data available -\r\n                        <div className=\"movie-wrapper\">\r\n                            <MovieCard movieData={ movieDataA } voteMovie={ () => voteMovie('A', movieDataA) } />\r\n                            <MovieCard movieData={ movieDataB } voteMovie={ () => voteMovie('B', movieDataB) } />\r\n                        </div>\r\n                        ) : ( // data loading -\r\n                        <div className=\"movie-wrapper\">\r\n                            <h2 className=\"color-white\">loading..</h2>\r\n                        </div>\r\n                    ) // simple isnt it \r\n                }\r\n            <Link to=\"/leaderboard\" state={{ data: fetchedMovieData.voteList }}>\r\n                <button id=\"finishBtn\" className=\"customBtn\" onClick={ () => finishVoting(fetchedMovieData.voteList) }>finish</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VoteScreen;\r\n\r\n\r\n// ! MOST OF THE CONSOLE LOGS YOU SEE HERE AND THERE ARE THE INVISIBLE EFFORTS MADE BY THE DEVELOPERS, WHICH ARE ERASED MODIFIED UPDATED AND CLEANED LEFTOVER LOGS, LIKE 100 WRONG ROADS : 6 RIGHT ONES : SINGLE BEST SOLUTION !","import './LeaderBar.css';\r\n\r\nconst LeaderBar = ({ children }) => {\r\n    return (\r\n        <div className=\"leaderBar\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeaderBar;","import { Link, useLocation } from 'react-router-dom';\r\nimport NextBtn from '../components/NextBtn';\r\nimport LeaderBar from '../components/LeaderBar';\r\nimport './LeaderboardScreen.css';\r\n\r\nconst LeaderboardScreen = () => {\r\n\r\n    // data from vote page\r\n    const location = useLocation();\r\n    const { data } = location.state;\r\n\r\n    // const voteKeys = Object.keys(data);\r\n    // console.log(voteKeys)\r\n\r\n    return (\r\n        <div className=\"leaderboard-screen\">\r\n            <h1 className=\"page-title\">leaderboard screen</h1>\r\n            <div className=\"leaderboard-wrapper\">\r\n                {\r\n                    data.map((votes, i) => <LeaderBar key={i}>\r\n                        {\r\n                            Object.keys(votes).map((vote, j) => (\r\n                                    <div key={j}>\r\n                                        <span>{ votes[vote] }</span>\r\n                                    </div>\r\n                                )\r\n                            )\r\n                        }\r\n                    </LeaderBar>)\r\n                }\r\n            <Link to=\"/\">\r\n                <NextBtn bottom=\"5vh\" right=\"5wh\" activeColor=\"#7dddf4\"/>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeaderboardScreen;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NextBtn from \"../components/NextBtn\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n            <h1>404</h1>\r\n            <Link to=\"/\">\r\n                <NextBtn bottom=\"5vh\" right=\"5vw\" activeColor=\"#7dddf4\" />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// All Screens\nimport LanguageScreen from '../screens/LanguageScreen';\nimport GenreScreen from '../screens/GenreScreen';\nimport VoteScreen from '../screens/VoteScreen';\nimport LeaderboardScreen from '../screens/LeaderboardScreen';\nimport NotFound from '../screens/NotFound';\nimport './App.css';\n\n\nfunction App() {  \n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={ <LanguageScreen/> } />\n        <Route path='/genre' element={ <GenreScreen/> } />\n        <Route path='/vote' element={ <VoteScreen/> } />\n        <Route path='/leaderboard' element={ <LeaderboardScreen/> } />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}